model:
  dim:                   960        # 30 heads × 32d
  depth:                 26         # Diminishing returns beyond this
  early_depth:           6
  heads:                 30         # Near inference limit
  pool_every_k_blocks:   4
  cls_dropout_rate:      0.05
  cls_pool_alpha_requires_grad: true
  cls_pool_alpha_init:   1.0
  adaptive_pool_temperature: 1.0
  policy_head_conv_dim:  480
  policy_head_mlp_hidden_dim: 960
  value_head_dropout_rate: 0.2
  num_policy_planes:     73
  drop_path:             0.2
  # SmolGen parameters (shared module) - doesn't scale linearly
  smolgen_start_layer:   3
  smolgen_latent_dim:    512
  smolgen_dropout:       0.1
  # Value head parameters
  value_spatial_compress_dim: 160    # ~6:1 compression ratio
  value_head_mlp_dims:   [1920, 1536, 1024]
  moves_left_spatial_compress_dim: 60 # 16:1 ratio
  moves_left_head_mlp_dims: [960, 512]
  # Hybrid patch embedding parameters
  patch_resblock_hidden: 240
  patch_global_proj_dim: 48
  patch_embed_dropout:   0.1

loss_weights:
  policy:           1.0
  value:            1.6
  moves_left:       0.2
  auxiliary_value:  0.2   # early‐group WDL head
  material:         0.03

optimiser:
  type:             adamw
  lr:               2e-4
  weight_decay:     1e-2
  betas:            [0.9, 0.95]
  sched:            cosine
  warmup_steps:     1500

dataset:
  data_dir:     data/train/lc0
  test_data_dir:    data/test/lc0    # files directly in test/ not in subdirectories
  batch_size:       96
  test_batch_size:  192
  grad_accum:       1
  num_workers:      40
  type:             tensor
  tensor_glob_pattern: '*.npz'

# CUDAGraph optimization - prevents frequent recompilation due to varying batch sizes
pad_partial_batches: true  # Pad partial batches to target batch size for consistent tensor shapes

runtime:
  device:           cuda
  precision:        fp16
  max_steps:        5000000
  log_every:        425
  ckpt_every:       170000
  val_every:        85000
  checkpoint_format: safetensors
  gradient_clip_norm: 0.5   # global‐norm clipping
  gradient_clip_value: 5.0  # value clipping for stability
  gradient_checkpointing: true
  compile_model: true # Can be enabled for ~10% speedup, but uses more memory
  compile_mode: max-autotune # Options: default, reduce-overhead, max-autotune (slowest compile, fastest runtime)
  compile_with_cudagraphs: true # Set to true for maximum speed (requires grad_accum adjustment)

logging:
  output_dir:       ./runs/v3/behemoth
  tensorboard:      true
  matplotlib:       true
  wandb:            false

rolling_metrics:
  window_size:      1000